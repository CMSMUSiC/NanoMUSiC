[DEFAULT]

# X axis label for the InvMass distribution.
# axis_label_invmass = "Mass / GeV"

# X axis label for the MET distribution.
# axis_label_met = "MET / GeV"

# X axis label for the SumPt distribution.
# axis_label_sumpt = "#Sigma p_{T} / GeV"

# X axis label for the InvMass distribution with MET (transverse mass).
# axis_label_transmass = "{M^{T}} / GeV"

# Height of canvas.
# canvas_height = 1050

# Width of canvas.
# canvas_width = 1400

# ROOT file containing a TEventClass, filled with Data events.
# data = null

# Quantile for confidence interval used to evaluate errors on data.
# data_err_alpha = 0.3173

# Aggregation level of process groups in plotting groups: none: no
# aggregation (for debugging), medium: normal aggregation (for normal
# use), strong: strong aggregation (for public use) custom: implement
# yourself
# detailed_groups = "medium"

# Save EventClasses in new File after working on it. suffix mc / data is
# automatically added. The .root extension can be omitted.
# ecout = null

# Apply this filter on the choice of EventClasses.
# filter = ["*"]

# Plotting format, each will be created in a separate subfolder.
# formats = ["pdf", "root"]

# Center of Mass energy to show in header.
# header_energy = "13 TeV"

# Number format and unit for luminosity. Use python number formatting,
# e.g. %%.2f.
# header_luminosity_format = "%.2f fb^{-1}"

# Normal port of header title (e.g. 'Preliminary').
# header_subtitle = "Preliminary"

# Bold part of header title (e.g. 'CMS')
# header_title = "CMS"

# Number of parallel jobs used while processing event classes..
# jobs = 1

# Distance between legend columns. Will apparently not go below ROOT
# minimum.
# legend_column_width = 0.2

# Include total yield in the legend (e.g. 'Data (3e8)').
# legend_include_yield = true

# Legend entry for the data.
# legend_label_data = "Data"

# Legend entry for the background uncertainty.
# legend_label_uncert = "BG uncert"

# Minmum MC yield to be included in the legend.
# legend_min_yield = 0.0

# Maximal number of columns.
# legend_number_columns = 2

# Fix legend size.
# legend_size_fixed = false

# Text size of legend entries (small: 0.0375, large: 0.045).
# legend_text_size = 0.045

# Left boundary of legend.
# legend_xlow = 0.75

# Right boundary of legend.
# legend_xup = 0.95

# Lower boundary of legend.
# legend_ylow = 0.4

# Upper boundary of legend.
# legend_yup = 0.925

# One empty bin is added above last data event. If it is too wide it
# won't be added. This is the threshold, how big this empty bin is
# alowed to be with respect to the size of the whole histogram.
# max_bin_width_percentage = 0.1

# ROOT file containing a TEventClass, filled with Monte-Carlo events.
# mc = null

# Directory to create plot files in.
# out = "./plotOut"

# Show systematic error bands.
# plot_error = true

# Include ratio plot.
# ratio = true

# Rebin ratio plot until at least one MC event is expected.
# ratio_rebin = true

# Scale to use for ratio plot: 0 - linear, 1 - log.
# ratio_scale = 0

# Scale bin content to area.
# scale_to_area = true

# Show post trial p-tilde value if available.
# show_p_tilde_value = true

# Show local p-value if available.
# show_p_value = true

# Show region of interest (RoI) from scan if available.
# show_roi = true

# Do not include EventClasses which include one of the listed strings.
# veto = []

# Maximum for x axis range.
# xmax = null

# Minimum for x axis range.
# xmin = null

# Maximum for y axis range.
# ymax = null

# Minimum for y axis range.
# ymin = null

# Threshold for minimal bin content for adjusting of x-axis
# ymin_threshold = 0.0001

