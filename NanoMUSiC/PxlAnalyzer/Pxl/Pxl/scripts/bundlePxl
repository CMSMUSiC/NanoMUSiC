#!/usr/bin/env bash

BASE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

echo "start bundling pxl code"

MODULE="$( dirname $BASE )"
echo "PXL module path for CMSSW is $MODULE"

if [ -z "${1}" ]; then
	echo "error: please pass a valid path to the pxl repository as the first argument"
	exit 1
else
	PXL="${1}"
fi
echo "PXL source directory is $PXL"

fetchFile() {
	src="$1"
	dst="$2"

	# create the dir of dst
	mkdir -p "$( dirname "${dst}" )"

	# copy the file AND change its include statements
	sed "s/\#include \"pxl\//#include \"Pxl\/Pxl\/interface\/pxl\//g" $1 > $2
}

# copy pxl modules core and hep
for module in core hep; do
	# fetch header files
	echo "fetch $module header files"
	includepath="$PXL/$module/include"
	for file in $( find "${includepath}" ); do
		if [ -d $file ]; then
			mkdir -p "$file"
		else
			relpath="$( echo $file | sed 's|'$includepath'\/\?||g' )"
			dst="$MODULE/interface/$relpath"

			fetchFile "$file" "$dst"
		fi
	done

	# fetch source files
	echo "fetch $module source files"
	srcpath="$PXL/$module/src"
	for file in $( find "${srcpath}" ); do
		if [ -d $file ]; then
			mkdir -p "$file"
		else
			relpath="$( echo $file | sed 's|'$srcpath'\/\?||g' )"
			dst="$MODULE/src/$relpath"

			fetchFile "$file" "$dst"
		fi
	done
done

# copy libs
for lib in simpleini; do
	echo "copy library ${lib}"
	cp -R "$PXL/lib/$lib" "$MODULE/src/"
done

# copy dynamic, cmake-generated files
if [ ! -d "$PXL/build" ]; then
	echo "error: please run cmake in the build directory of pxl"
	exit 1
fi
for file in pxl/core/config.hpp; do
	echo "copy dynamic file ${file}"
	src="$PXL/build/include/$file"
	dst="$MODULE/interface/$file"

	fetchFile "$src" "$dst"
done

echo "done"
